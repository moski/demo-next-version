name: Build and Push
on: push

env:
  NODE_VERSION: 20.17.0
  JAVA_VERSION: 11
  JAVA_DISTRIBUTION: "adopt"

jobs:
  build-push:
    name: run tests, build and push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}

      # - name: Install startappz-github-actions
      #   uses: actions/checkout@v4
      #   with:
      #     repository: Startappz/startappz-github-actions
      #     ref: main
      #     path: .startappz-github-actions
      #     token: ${{ secrets.BRANCHLET_ACCESS_TOKEN_PUBLIC }}

      - name: Install dependencies
        run: npm ci

      - name: Add INPUT_SHA env var
        run: |
          export INPUT_SHA=$(git rev-parse ${{ github.ref }})
          echo "INPUT_SHA=`echo $INPUT_SHA`" >> $GITHUB_ENV

      - name: Get next release version
        id: semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release --dry-run --plugins [@semantic-release/commit-analyzer, @semantic-release/release-notes-generator, @semantic-release/github, semantic-release-gha-output]

      - name: Debug
        run: |
          echo ${{ steps.semantic-release.outputs.tag }}
          echo ${{ steps.semantic-release.outputs.version }}
          echo ${{ steps.semantic-release.outputs.published }}

      # - name: Get next release version
      #   run: |
      #     npx semantic-release --dry-run --plugins [@semantic-release/commit-analyzer, @semantic-release/release-notes-generator, @semantic-release/github semantic-release-gha-output]

      # - name: Get next release version
      #   uses: actions/github-script@v7
      #   id: next-version
      #   with:
      #     result-encoding: string
      #     script: |
      #       const getNextVersion = require('./.startappz-github-actions/custom-scripts/next-version');
      #       const nextVersion = await getNextVersion({
      #         core,
      #         github,
      #         context,
      #         sha: process.env.INPUT_SHA,
      #       });
      #       return nextVersion;
      #   env:
      #     INPUT_SHA: ${{ env.INPUT_SHA }}
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Write version to files
      #   run: |
      #     ./deployment/write-versions.sh ${{ steps.next-version.outputs.result }}

#npx semantic-release --dry-run --plugins [@semantic-release/commit-analyzer, @semantic-release/release-notes-generator, @semantic-release/github semantic-release-gha-output]
